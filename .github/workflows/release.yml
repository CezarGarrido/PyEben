name: Create GitHub Release

on:
  push:
    branches: [ main ]

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.8'
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install desktop-file-utils
          sudo ./linux/bootstrap.sh
          python3 -m pip install pycairo
          python3 -m pip install PyGObject
          python3 -m pip install pyinstaller
          python3 -m pip install -r requirements.txt
      - name: Set up environment
        run: |
          cp .env.ci .env
      - name: Build package
        run: |
          pyinstaller --distpath dist/linux build.spec
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: dist/linux/

  build-windows-32:
    name: Build for Windows 32-bit
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4
      - name: Configurar MSYS2 para 32-bit
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          install: >-
            mingw-w64-i686-gcc
            mingw-w64-i686-pkg-config
            mingw-w64-i686-python
            mingw-w64-i686-python-pip
            mingw-w64-i686-postgresql
  
      - name: Configurar MSYS2 para 32-bit
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          install: >-
            mingw-w64-i686-gcc
            mingw-w64-i686-pkg-config
            mingw-w64-i686-python
            mingw-w64-i686-python-pip
    
      - name: Baixar e instalar PostgreSQL 32-bit
        run: |
          Invoke-WebRequest -Uri "https://get.enterprisedb.com/postgresql/postgresql-9.6.24-1-windows-binaries.zip" -OutFile "postgresql.zip"
          Expand-Archive -Path "postgresql.zip" -DestinationPath "C:\PostgreSQL"
          echo "C:\PostgreSQL\pgsql\bin" >> $env:GITHUB_PATH
    
      - name: Instalar psycopg2-binary
        run: |
          pip install --no-cache-dir psycopg2-binary

  github-release:
    name: GitHub Release
    needs: [build-linux, build-windows-32]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download Linux dist
        uses: actions/download-artifact@v4
        with:
          name: linux-dist
          path: dist/linux/
      - name: Download Windows 32-bit dist
        uses: actions/download-artifact@v4
        with:
          name: windows-dist
          path: dist/windows/
      - name: Create ZIP packages
        run: |
          cd dist
          zip -r linux-build.zip linux/
          zip -r windows-build.zip windows/
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          if gh release view '${{ github.ref_name }}' --repo '${{ github.repository }}'; then
            echo "Release exists"
          else
            echo "Creating release"
            gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --generate-notes
          fi
      - name: Upload ZIPs to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ github.ref_name }}' dist/linux-build.zip dist/windows-build.zip --repo '${{ github.repository }}'
