name: Create GitHub Release

on:
  push:
    tags:
      - '*'

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.8'
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install desktop-file-utils
          sudo ./linux/bootstrap.sh
          python3 -m pip install pycairo
          python3 -m pip install PyGObject
      - name: Set up environment
        run: |
          cp .env.ci .env
      - name: Build package
        run: |
          python3 build.py
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist
          path: dist/

  build-windows-32:
    name: Build for Windows 32-bit
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 32-bit
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.8'
          architecture: x86
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw32
          update: true
      - name: Install dependencies
        run: |
          pacman -S --noconfirm \
            mingw-w64-i686-gtk3 \
            mingw-w64-i686-gcc \
            mingw-w64-i686-python3-gobject \
            mingw-w64-i686-poppler
      - name: Check MSYS2 environment
        run: |
          echo "MSYSTEM=$MSYSTEM"
          echo "uname -m=$(uname -m)"
      - name: Set up environment
        run: |
          cp .env.ci .env
      - name: Build package
        run: |
          python build.py
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: windows-32-dist
          path: dist/

  github-release:
    name: GitHub Release
    needs: [build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download Linux dist
        uses: actions/download-artifact@v4
        with:
          name: linux-dist
          path: dist/
      - name: Download Windows 32-bit dist
        uses: actions/download-artifact@v4
        with:
          name: windows-32-dist
          path: dist/
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          if gh release view '${{ github.ref_name }}' --repo '${{ github.repository }}'; then
            echo "Release exists"
          else
            echo "Creating release"
            gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --generate-notes
          fi
      - name: Upload dists to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
